// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NineChronicles.DataProvider.Store;

namespace NineChronicles.DataProvider.Executable.Migrations
{
    [DbContext(typeof(NineChroniclesContext))]
    [Migration("20220715084844_AddCrystalStakingBattleArena")]
    partial class AddCrystalStakingBattleArena
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AbilityRankingModel", b =>
                {
                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvatarAddress");

                    b.ToTable("AbilityRankings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AgentModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.HasKey("Address");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AvatarModel", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Address");

                    b.HasIndex("AgentAddress");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnemyAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedalCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicketCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Victory")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("BattleArenas");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaRankingModel", b =>
                {
                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("AdditionalTicketPrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArenaType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EndBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EntranceFee")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LossCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MedalCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchasedTicketCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RequiredMedalCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ticket")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TicketPrice")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TicketResetCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvatarAddress");

                    b.ToTable("BattleArenaRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ClaimStakeRewardModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("ApPotionCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimRewardAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("ClaimStakeEndBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ClaimStakeStartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HourGlassCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.ToTable("ClaimStakeRewards");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationConsumableModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("CombinationConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationEquipmentModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubRecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("CombinationEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CraftRankingInputModel", b =>
                {
                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvatarAddress");

                    b.ToTable("CraftRankings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CraftRankingOutputModel", b =>
                {
                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvatarAddress");

                    b.ToTable("CraftRankingsOutput");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.EquipmentRankingModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.ToTable("EquipmentRankings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.GrindingModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Crystal")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipmentItemId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("Grindings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cleared")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Mimisbrunnr")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("HackAndSlashes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasRandomBuffModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("TEXT");

                    b.Property<int>("GachaCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HasStageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("HasRandomBuffs");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasWithRandomBuffModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuffId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cleared")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StageId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("HasWithRandomBuffs");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementFailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntNCG")
                        .HasColumnType("TEXT");

                    b.Property<string>("EquipmentItemId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("GainedCrystal")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialItemId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("ItemEnhancementFails");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialId")
                        .HasColumnType("TEXT");

                    b.Property<int>("SlotIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("ItemEnhancements");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.JoinArenaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("ArenaRound")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("JoinArenas");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.MigrateMonsterCollectionModel", b =>
                {
                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MigrationAmount")
                        .HasColumnType("TEXT");

                    b.Property<long>("MigrationStartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StakeStartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("AgentAddress");

                    b.HasIndex("AgentAddress1");

                    b.ToTable("MigrateMonsterCollections");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ReplaceCombinationEquipmentMaterialModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReplacedMaterialCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReplacedMaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("ReplaceCombinationEquipmentMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopConsumableModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainStat")
                        .HasColumnType("TEXT");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("ShopConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopCostumeModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Equipped")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("ShopCostumes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopEquipmentModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueStatType")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("ShopEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryConsumableModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockHash")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainStat")
                        .HasColumnType("TEXT");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TxId")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("ShopHistoryConsumables");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryCostumeModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockHash")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Equipped")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TxId")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("ShopHistoryCostumes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryEquipmentModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockHash")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuffSkillCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("NonFungibleId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("RequiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("SetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpineResourcePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TxId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueStatType")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("ShopHistoryEquipments");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopHistoryMaterialModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockHash")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TxId")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("ShopHistoryMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ShopMaterialModel", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CombatPoint")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ElementalType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemType")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<long>("SellExpiredBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SellStartedBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SellerAgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerAvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TradableId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.ToTable("ShopMaterials");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StageRankingModel", b =>
                {
                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ArmorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AvatarLevel")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClearedStageId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ranking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TitleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AvatarAddress");

                    b.ToTable("StageRanking");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StakeModel", b =>
                {
                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("NewAmount")
                        .HasColumnType("TEXT");

                    b.Property<long>("NewStakeStartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PrevStakeStartBlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PreviousAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RemainingNCG")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeStamp");

                    b.HasIndex("AgentAddress");

                    b.ToTable("Stakings");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockEquipmentRecipeModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnlockEquipmentRecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UnlockEquipmentRecipes");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockWorldModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgentAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarAddress")
                        .HasColumnType("TEXT");

                    b.Property<long>("BlockIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BurntCrystal")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnlockWorldId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AgentAddress");

                    b.HasIndex("AvatarAddress");

                    b.ToTable("UnlockWorlds");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.AvatarModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.BattleArenaModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ClaimStakeRewardModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationConsumableModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.CombinationEquipmentModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.GrindingModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HackAndSlashModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasRandomBuffModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.HasWithRandomBuffModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementFailModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ItemEnhancementModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.JoinArenaModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.MigrateMonsterCollectionModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.ReplaceCombinationEquipmentMaterialModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.StakeModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockEquipmentRecipeModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("NineChronicles.DataProvider.Store.Models.UnlockWorldModel", b =>
                {
                    b.HasOne("NineChronicles.DataProvider.Store.Models.AgentModel", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentAddress");

                    b.HasOne("NineChronicles.DataProvider.Store.Models.AvatarModel", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarAddress");

                    b.Navigation("Agent");

                    b.Navigation("Avatar");
                });
#pragma warning restore 612, 618
        }
    }
}
